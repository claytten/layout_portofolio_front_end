{"ast":null,"code":"import _extends from \"/home/welvim/code/React/portofolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/home/welvim/code/React/portofolio/client/src/components/imageGridList/ImageGridList.jsx\";\nimport React from \"react\";\nimport PropTypes from 'prop-types'; //nodejs library that concatenates style\n\nimport withStyles from \"@material-ui/core/styles/withStyles\"; //core components\n\nimport GridSection from \"./sections/GridSection.jsx\";\nimport tileData from \"./sections/ListImage.jsx\";\nimport Tabb from \"components/tab/Tab.jsx\";\nimport ImageGridListStyle from \"assets/jss/material-kit-react/components/imageGridListStyle.jsx\";\n\nvar ImageGridList = function ImageGridList(_ref) {\n  var props = _extends({}, _ref);\n\n  var classes = props.classes,\n      indexed = props.indexed,\n      handleChange = props.handleChange;\n  var image;\n\n  switch (indexed) {\n    case 0:\n      image = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(GridSection, {\n        indexIn: {\n          indexed: indexed\n        },\n        imageURLs: tileData.filter(function (tiles) {\n          return tiles.position === \"left\";\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }), React.createElement(GridSection, {\n        indexIn: {\n          indexed: indexed\n        },\n        imageURLs: tileData.filter(function (tiles) {\n          return tiles.enable === \"right\";\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }));\n      break;\n\n    case 1:\n      image = React.createElement(GridSection, {\n        indexIn: {\n          indexed: indexed\n        },\n        imageURLs: tileData.filter(function (tiles) {\n          return tiles.position === \"left\";\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      });\n      break;\n\n    case 2:\n      image = React.createElement(GridSection, {\n        indexIn: {\n          indexed: indexed\n        },\n        imageURLs: tileData.filter(function (tiles) {\n          return tiles.enable === \"right\";\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      });\n      break;\n\n    default:\n      image = React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"you got an error\");\n      break;\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Tabb, {\n    indexTab: indexed,\n    handleChangeTab: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), image);\n};\n\nImageGridList.propTypes = {\n  indexed: PropTypes.number.isRequired,\n  handleChange: PropTypes.func.isRequired\n};\nexport default withStyles(ImageGridListStyle)(ImageGridList);","map":{"version":3,"sources":["/home/welvim/code/React/portofolio/client/src/components/imageGridList/ImageGridList.jsx"],"names":["React","PropTypes","withStyles","GridSection","tileData","Tabb","ImageGridListStyle","ImageGridList","props","classes","indexed","handleChange","image","filter","tiles","position","enable","root","propTypes","number","isRequired","func"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,qCAAvB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAGA,OAAOC,kBAAP,MAAgC,iEAAhC;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAiB;AAAA,MAAZC,KAAY;;AAAA,MAC9BC,OAD8B,GACKD,KADL,CAC9BC,OAD8B;AAAA,MACrBC,OADqB,GACKF,KADL,CACrBE,OADqB;AAAA,MACZC,YADY,GACKH,KADL,CACZG,YADY;AAEtC,MAAIC,KAAJ;;AACA,UAAOF,OAAP;AACC,SAAK,CAAL;AACCE,MAAAA,KAAK,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACL,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAE;AAACF,UAAAA,OAAO,EAAPA;AAAD,SAAtB;AAAiC,QAAA,SAAS,EAAEN,QAAQ,CAACS,MAAT,CAAgB,UAAAC,KAAK;AAAA,iBAAIA,KAAK,CAACC,QAAN,KAAmB,MAAvB;AAAA,SAArB,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,EAEL,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAE;AAACL,UAAAA,OAAO,EAAPA;AAAD,SAAtB;AAAiC,QAAA,SAAS,EAAEN,QAAQ,CAACS,MAAT,CAAgB,UAAAC,KAAK;AAAA,iBAAIA,KAAK,CAACE,MAAN,KAAiB,OAArB;AAAA,SAArB,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFK,CAAR;AAIA;;AACD,SAAK,CAAL;AACCJ,MAAAA,KAAK,GAAG,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAE;AAACF,UAAAA,OAAO,EAAPA;AAAD,SAAtB;AAAiC,QAAA,SAAS,EAAEN,QAAQ,CAACS,MAAT,CAAgB,UAAAC,KAAK;AAAA,iBAAIA,KAAK,CAACC,QAAN,KAAmB,MAAvB;AAAA,SAArB,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACA;;AACD,SAAK,CAAL;AACCH,MAAAA,KAAK,GAAG,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAE;AAACF,UAAAA,OAAO,EAAPA;AAAD,SAAtB;AAAiC,QAAA,SAAS,EAAEN,QAAQ,CAACS,MAAT,CAAgB,UAAAC,KAAK;AAAA,iBAAIA,KAAK,CAACE,MAAN,KAAiB,OAArB;AAAA,SAArB,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACA;;AACD;AACCJ,MAAAA,KAAK,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAR;AACA;AAfF;;AAiBA,SACC;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACQ,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACO,oBAAC,IAAD;AACC,IAAA,QAAQ,EAAEP,OADX;AAEC,IAAA,eAAe,EAAEC,YAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADP,EAKQC,KALR,CADD;AASA,CA7BD;;AA+BAL,aAAa,CAACW,SAAd,GAA0B;AACzBR,EAAAA,OAAO,EAAET,SAAS,CAACkB,MAAV,CAAiBC,UADD;AAEzBT,EAAAA,YAAY,EAAGV,SAAS,CAACoB,IAAV,CAAeD;AAFL,CAA1B;AAKA,eAAelB,UAAU,CAACI,kBAAD,CAAV,CAA+BC,aAA/B,CAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\n//nodejs library that concatenates style\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\n//core components\nimport GridSection from \"./sections/GridSection.jsx\";\nimport tileData from \"./sections/ListImage.jsx\";\nimport Tabb from \"components/tab/Tab.jsx\"\n\n\nimport ImageGridListStyle  from \"assets/jss/material-kit-react/components/imageGridListStyle.jsx\";\n\nconst ImageGridList = ({...props }) => {\n\tconst { classes, indexed, handleChange } = props;\n\tlet image;\n\tswitch(indexed) {\n\t\tcase 0:\n\t\t\timage = <div>\n\t\t\t\t\t\t<GridSection indexIn={{indexed}} imageURLs={tileData.filter(tiles => tiles.position === \"left\")}/>\n\t\t\t\t\t\t<GridSection indexIn={{indexed}} imageURLs={tileData.filter(tiles => tiles.enable === \"right\")}/>\n\t\t\t\t\t</div>;\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\timage = <GridSection indexIn={{indexed}} imageURLs={tileData.filter(tiles => tiles.position === \"left\")}/>;\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\timage = <GridSection indexIn={{indexed}} imageURLs={tileData.filter(tiles => tiles.enable === \"right\")}/>;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\timage = <h1>you got an error</h1>\n\t\t\tbreak;\n\t}\n\treturn(\n\t\t<div className={classes.root}>\n        \t<Tabb\n        \t\tindexTab={indexed}\n        \t\thandleChangeTab={handleChange}\n        \t/>\n        \t{image}\n        </div>\n\t);\n};\n\nImageGridList.propTypes = {\n\tindexed: PropTypes.number.isRequired,\n\thandleChange : PropTypes.func.isRequired\n}\n\nexport default withStyles(ImageGridListStyle)(ImageGridList);"]},"metadata":{},"sourceType":"module"}