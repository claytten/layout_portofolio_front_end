{"ast":null,"code":"import _defineProperty from \"/home/welvim/code/React/portofolio/front-end/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/home/welvim/code/React/portofolio/front-end/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"/home/welvim/code/React/portofolio/front-end/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/home/welvim/code/React/portofolio/front-end/src/components/card/CardBody.jsx\";\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\"; // @material-ui/icons\n// core components\n\nimport cardBodyStyle from \"assets/jss/material-kit-react/components/cardBodyStyle.jsx\";\n\nvar CardBody = function CardBody(_ref) {\n  var _classNames;\n\n  var props = _extends({}, _ref);\n\n  var classes = props.classes,\n      className = props.className,\n      children = props.children,\n      cardwidth = props.cardwidth,\n      rest = _objectWithoutProperties(props, [\"classes\", \"className\", \"children\", \"cardwidth\"]);\n\n  var cardBodyClasses = classNames((_classNames = {}, _defineProperty(_classNames, classes.cardBody, true), _defineProperty(_classNames, classes.cardWidth, cardwidth), _defineProperty(_classNames, className, className !== undefined), _classNames));\n  return React.createElement(\"div\", Object.assign({\n    className: cardBodyClasses\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), children);\n};\n\nCardBody.propTypes = {\n  classes: PropTypes.object.isrequired,\n  className: PropTypes.string,\n  cardwidth: PropTypes.bool\n};\nexport default withStyles(cardBodyStyle)(CardBody);","map":{"version":3,"sources":["/home/welvim/code/React/portofolio/front-end/src/components/card/CardBody.jsx"],"names":["React","classNames","PropTypes","withStyles","cardBodyStyle","CardBody","props","classes","className","children","cardwidth","rest","cardBodyClasses","cardBody","cardWidth","undefined","propTypes","object","isrequired","string","bool"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,qCAAvB,C,CACA;AAEA;;AACA,OAAOC,aAAP,MAA0B,4DAA1B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAgB;AAAA;;AAAA,MAAXC,KAAW;;AAAA,MACxBC,OADwB,GAC4BD,KAD5B,CACxBC,OADwB;AAAA,MACfC,SADe,GAC4BF,KAD5B,CACfE,SADe;AAAA,MACJC,QADI,GAC4BH,KAD5B,CACJG,QADI;AAAA,MACMC,SADN,GAC4BJ,KAD5B,CACMI,SADN;AAAA,MACoBC,IADpB,4BAC4BL,KAD5B;;AAEhC,MAAMM,eAAe,GAAGX,UAAU,iDAChCM,OAAO,CAACM,QADwB,EACb,IADa,gCAEhCN,OAAO,CAACO,SAFwB,EAEZJ,SAFY,gCAGhCF,SAHgC,EAGpBA,SAAS,KAAKO,SAHM,gBAAlC;AAKA,SACC;AAAK,IAAA,SAAS,EAAGH;AAAjB,KAAsCD,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACEF,QADF,CADD;AAKA,CAZD;;AAcAJ,QAAQ,CAACW,SAAT,GAAqB;AACpBT,EAAAA,OAAO,EAAGL,SAAS,CAACe,MAAV,CAAiBC,UADP;AAEpBV,EAAAA,SAAS,EAAGN,SAAS,CAACiB,MAFF;AAGpBT,EAAAA,SAAS,EAAER,SAAS,CAACkB;AAHD,CAArB;AAMA,eAAejB,UAAU,CAACC,aAAD,CAAV,CAA0BC,QAA1B,CAAf","sourcesContent":["import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n// @material-ui/icons\n\n// core components\nimport cardBodyStyle from \"assets/jss/material-kit-react/components/cardBodyStyle.jsx\";\n\nconst CardBody = ({...props}) => {\n\tconst { classes, className, children, cardwidth, ...rest} = props;\n\tconst cardBodyClasses = classNames({\n\t\t[classes.cardBody]: true,\n\t\t[classes.cardWidth]: cardwidth,\n\t\t[className]: className !== undefined\n\t});\n\treturn (\n\t\t<div className= {cardBodyClasses} {...rest} > \n\t\t\t{children}\n\t\t</div>\n\t);\n}\n\nCardBody.propTypes = {\n\tclasses : PropTypes.object.isrequired,\n\tclassName : PropTypes.string,\n\tcardwidth: PropTypes.bool\n};\n\nexport default withStyles(cardBodyStyle)(CardBody);"]},"metadata":{},"sourceType":"module"}